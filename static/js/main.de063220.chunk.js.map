{"version":3,"sources":["components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","api/users.ts","App.tsx","api/todos.ts","index.tsx"],"names":["UserInfo","user","name","email","className","href","TodoInfo","todo","id","title","completed","classNames","TodoList","todos","map","username","getUser","userId","usersFromServer","find","getVisibleTodos","selectedUser","todoId","Math","max","getNewTodoId","foundUser","getUserId","trim","todosWithUsers","App","useState","setTodos","setTitle","setSelectedUser","errorTitle","setErrorTitle","errorUser","setErrorUser","error","action","method","onSubmit","event","preventDefault","length","type","placeholder","value","onChange","lastSymbol","target","test","inputControl","disabled","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.de063220.chunk.js","sourcesContent":["import { User } from '../../types/User';\nimport './UserInfo.scss';\n\ntype Props = {\n  user: User;\n};\n\nexport const UserInfo: React.FC<Props> = ({ user }) => {\n  const {\n    name,\n    email,\n  } = user;\n\n  return (\n    <a className=\"UserInfo\" href={`mailto:${email}`}>\n      {name}\n    </a>\n  );\n};\n","import classNames from 'classnames';\nimport { Todo } from '../../types/Todo';\nimport { UserInfo } from '../UserInfo';\nimport './TodoInfo.scss';\n\ntype Props = {\n  todo: Todo;\n};\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => {\n  const {\n    id,\n    title,\n    completed,\n    user,\n  } = todo;\n\n  return (\n    <article\n      className={classNames(\n        'TodoInfo',\n        {\n          'TodoInfo--completed': completed,\n        },\n      )}\n      data-id={id}\n    >\n      <h2 className=\"TodoInfo__title\">{title}</h2>\n\n      {user && (\n        <UserInfo user={user} />\n      )}\n    </article>\n  );\n};\n","import { TodoInfo } from '../TodoInfo';\nimport { Todo } from '../../types/Todo';\nimport './TodoList.scss';\n\ntype Props = {\n  todos: Todo[];\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => (\n  <ul className=\"TodoList\">\n    {todos.map(todo => (\n      <li key={todo.id}>\n        <TodoInfo todo={todo} />\n      </li>\n    ))}\n  </ul>\n);\n","export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import { useState } from 'react';\nimport { TodoList } from './components/TodoList';\nimport './App.scss';\n\nimport { User } from './types/User';\nimport { Todo } from './types/Todo';\n\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\n\nfunction getUser(userId: number | null): User | null {\n  const foundUser = usersFromServer.find(user => user.id === userId);\n\n  return foundUser || null;\n}\n\nfunction getUserId(selectedUser: string): number | null {\n  const foundUser = usersFromServer.find(user => user.name === selectedUser);\n\n  return foundUser ? foundUser.id : null;\n}\n\nfunction getNewTodoId(todos: Todo[]): number {\n  return Math.max(...todos.map(todo => todo.id)) + 1;\n}\n\nfunction getVisibleTodos(\n  todos: Todo[],\n  selectedUser: string,\n  title: string,\n): Todo[] {\n  const todoId = getNewTodoId(todos);\n  const userId = getUserId(selectedUser);\n  const todo = {\n    id: todoId,\n    userId,\n    title: title.trim(),\n    completed: false,\n    user: getUser(userId),\n  };\n\n  return [...todos, todo];\n}\n\nfunction inputControl(event: React.ChangeEvent<HTMLInputElement>): boolean {\n  const lastSymbol = event.target.value[event.target.value.length - 1];\n\n  return /\\p{sc=Latn}|\\p{sc=Cyrillic}| |\\d/u.test(lastSymbol);\n}\n\nconst todosWithUsers: Todo[] = todosFromServer.map(todo => ({\n  ...todo,\n  user: getUser(todo.userId),\n}));\n\nexport const App = () => {\n  const [todos, setTodos] = useState(todosWithUsers);\n  const [title, setTitle] = useState('');\n  const [selectedUser, setSelectedUser] = useState('Choose a user');\n  const [errorTitle, setErrorTitle] = useState(false);\n  const [errorUser, setErrorUser] = useState(false);\n  let error = false;\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        action=\"/api/users\"\n        method=\"POST\"\n        onSubmit={(event) => {\n          event.preventDefault();\n          if (title.length === 0) {\n            setErrorTitle(true);\n            error = true;\n          }\n\n          if (selectedUser === 'Choose a user') {\n            setErrorUser(true);\n            error = true;\n          }\n\n          if (!error) {\n            setTodos(getVisibleTodos(todos, selectedUser, title));\n            setTitle('');\n            setSelectedUser('Choose a user');\n          }\n        }}\n      >\n        <div className=\"field\">\n          <label>\n            {'Title: '}\n            <input\n              type=\"text\"\n              name=\"title\"\n              placeholder=\"Enter a title\"\n              data-cy=\"titleInput\"\n              value={title}\n              onChange={(event) => {\n                if (inputControl(event)) {\n                  setTitle(event.target.value);\n                  setErrorTitle(false);\n                }\n              }}\n            />\n          </label>\n          {errorTitle && (<span className=\"error\">Please enter a title</span>)}\n        </div>\n\n        <div className=\"field\">\n          <label>\n            {'User: '}\n            <select\n              name=\"user\"\n              data-cy=\"userSelect\"\n              value={selectedUser}\n              onChange={(event) => {\n                setSelectedUser(event.target.value);\n                setErrorUser(false);\n              }}\n            >\n              <option disabled>Choose a user</option>\n              {usersFromServer.map(user => (\n                <option key={user.id}>{user.name}</option>\n              ))}\n            </select>\n          </label>\n          {errorUser && (<span className=\"error\">Please choose a user</span>)}\n        </div>\n\n        <button type=\"submit\" data-cy=\"submitButton\">\n          Add\n        </button>\n      </form>\n\n      <TodoList todos={todos} />\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}